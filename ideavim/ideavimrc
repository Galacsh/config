source ~/.vim/options.vimrc
source ~/.vim/keymap.vimrc

" =============
" == Plugins ==
" =============

set ideastatusicon=gray
set which-key
let g:WhichKey_DefaultDelay='1000'
set NERDTree
set surround
set commentary
set easymotion
let g:EasyMotion_do_mapping='0'
set highlightedyank
let g:highlightedyank_highlight_duration='100'
let g:highlightedyank_highlight_color='rgba(255, 255, 255, 50)'

" ============
" == Keymap ==
" ============

" [EasyMotion]
nmap <Leader>j <Plug>(easymotion-f)
nmap <Leader>J <Plug>(easymotion-F)

" [Find]
nmap <Leader><Leader> <Action>(Switcher)
nmap <Leader>fs <Action>(FindInPath)
nmap <Leader>ff <Action>(GotoFile)
nmap <Leader>fb <Action>(GotoAction)
nmap <Leader>fu <Action>(ShowUsages)
nmap <Leader>fU <Action>(FindUsages)

" [Menu]
nmap <Leader>mm <Action>(MainMenu)
nmap <Leader>mb <Action>(BuildMenu)
nmap <Leader>mc <Action>(CodeMenu)
nmap <Leader>mt <Action>(ToolWindowsGroup)

" [Collapse / Expand]
nmap <Leader>, <Action>(CollapseRegion)
nmap <Leader>. <Action>(ExpandRegion)
nmap <Leader>< <Action>(CollapseAllRegions)
nmap <Leader>> <Action>(ExpandAllRegions)

" [Code]
nmap <Leader>ca <Action>(ShowIntentionActions)
nmap <Leader>cg <Action>(Generate)
nmap <Leader>ct <Action>(GoToTest)
nmap gd <Action>(GotoDeclaration)
nmap gr <Action>(GotoDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gt <Action>(QuickTypeDefinition)
nmap g<S-d> <Action>(GotoTypeDeclaration)
nmap <S-k> <Action>(QuickJavaDoc)

" [Problems / Quickfix]
nmap <Leader>xd <Action>(ShowErrorDescription)
nmap <Leader>xn <Action>(GotoNextError)
nmap <Leader>xp <Action>(GotoPreviousError)
nmap <Leader>xx <Action>(ActivateProblemsViewToolWindow)

" [process] - build/debug/run/test
nmap <Leader>pr <Action>(ChooseRunConfiguration)
nmap <Leader>pd <Action>(ChooseDebugConfiguration)
nmap <Leader>pp <Action>(RunnerActions)
nmap <Leader>ps <Action>(Stop)

" [refactor]
map <Leader>rr <Action>(Refactorings.QuickListPopupAction)
map <Leader>rn <Action>(RenameElement)
map <Leader>rf <Action>(ReformatCode)
map <Leader>ro <Action>(OptimizeImports)
map <Leader>rs <Action>(osmedile.intellij.stringmanip.PopupChoiceAction)
map <Leader>rN <Action>(RenameFile)

" [Git]
" Enable 'Staging Area'
map <Leader>gg <Action>(Vcs.QuickListPopupAction)
map <Leader>gd <Action>(Compare.SameVersion)
map <Leader>gr <Action>(Vcs.RollbackChangedLines)
map <Leader>gc <Action>(Git.Commit.Stage)
map <Leader>gps <Action>(Vcs.Push)
map <Leader>gpl <Action>(Git.Pull)
map <Leader>gf <Action>(Git.Fetch)
map <Leader>gh <Action>(Vcs.ShowTabbedFileHistory)
map <Leader>gH <Action>(Vcs.Show.Log)
map <Leader>ga <Action>(Git.Add)

